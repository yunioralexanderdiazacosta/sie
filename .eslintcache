[{"/home/yunior/sie/sie/src/index.js":"1","/home/yunior/sie/sie/src/themeConfig.js":"2","/home/yunior/sie/sie/src/routers/AppRouter.js":"3","/home/yunior/sie/sie/src/pages/Login.js":"4","/home/yunior/sie/sie/src/pages/Dashboard.js":"5","/home/yunior/sie/sie/src/routers/DashboardRouter.js":"6","/home/yunior/sie/sie/src/hooks/useForm.js":"7","/home/yunior/sie/sie/src/services/LoginServices.js":"8","/home/yunior/sie/sie/src/components/listItems.js":"9","/home/yunior/sie/sie/src/components/ui/SnackbarComponent.js":"10","/home/yunior/sie/sie/src/http-common.js":"11","/home/yunior/sie/sie/src/components/bombeo/Bombeo.js":"12","/home/yunior/sie/sie/src/components/bombeo/Data.js":"13","/home/yunior/sie/sie/src/components/bombeo/FormBombeo.js":"14","/home/yunior/sie/sie/src/services/BombeoServices.js":"15","/home/yunior/sie/sie/src/components/Title.js":"16","/home/yunior/sie/sie/src/components/ui/AlertComponent.js":"17","/home/yunior/sie/sie/src/hooks/useFormLogin.js":"18","/home/yunior/sie/sie/src/components/piscina/Piscina.js":"19","/home/yunior/sie/sie/src/components/piscina/Data.js":"20","/home/yunior/sie/sie/src/services/PiscinaServices.js":"21","/home/yunior/sie/sie/src/components/piscina/FormPiscina.js":"22","/home/yunior/sie/sie/src/components/termosolar/Termosolar.js":"23","/home/yunior/sie/sie/src/components/termosolar/Data.js":"24","/home/yunior/sie/sie/src/components/termosolar/FormTermosolar.js":"25","/home/yunior/sie/sie/src/services/TermosolarServices.js":"26","/home/yunior/sie/sie/src/components/potencia/Potencia.js":"27","/home/yunior/sie/sie/src/components/potencia/Data.js":"28","/home/yunior/sie/sie/src/components/potencia/FormPotencia.js":"29","/home/yunior/sie/sie/src/services/PotenciaServices.js":"30"},{"size":346,"mtime":1616278012464,"results":"31","hashOfConfig":"32"},{"size":320,"mtime":1615758892000,"results":"33","hashOfConfig":"32"},{"size":724,"mtime":1616363979562,"results":"34","hashOfConfig":"32"},{"size":4132,"mtime":1616198429006,"results":"35","hashOfConfig":"32"},{"size":5700,"mtime":1615762527000,"results":"36","hashOfConfig":"32"},{"size":830,"mtime":1616363982608,"results":"37","hashOfConfig":"32"},{"size":448,"mtime":1616198302839,"results":"38","hashOfConfig":"32"},{"size":483,"mtime":1615759904000,"results":"39","hashOfConfig":"32"},{"size":2099,"mtime":1616362922860,"results":"40","hashOfConfig":"32"},{"size":960,"mtime":1615761321000,"results":"41","hashOfConfig":"32"},{"size":249,"mtime":1616198114519,"results":"42","hashOfConfig":"32"},{"size":7146,"mtime":1616415928920,"results":"43","hashOfConfig":"32"},{"size":718,"mtime":1615765776000,"results":"44","hashOfConfig":"32"},{"size":21261,"mtime":1615778451000,"results":"45","hashOfConfig":"32"},{"size":412,"mtime":1615755845000,"results":"46","hashOfConfig":"32"},{"size":343,"mtime":1613616968000,"results":"47","hashOfConfig":"32"},{"size":359,"mtime":1613616968000,"results":"48","hashOfConfig":"32"},{"size":317,"mtime":1616198506701,"results":"49","hashOfConfig":"32"},{"size":8072,"mtime":1616415679188,"results":"50","hashOfConfig":"32"},{"size":609,"mtime":1616251388437,"results":"51","hashOfConfig":"32"},{"size":150,"mtime":1616240089221,"results":"52","hashOfConfig":"32"},{"size":34916,"mtime":1616379041876,"results":"53","hashOfConfig":"32"},{"size":8213,"mtime":1616415741688,"results":"54","hashOfConfig":"32"},{"size":589,"mtime":1616265692288,"results":"55","hashOfConfig":"32"},{"size":36086,"mtime":1616360314612,"results":"56","hashOfConfig":"32"},{"size":169,"mtime":1616264723709,"results":"57","hashOfConfig":"32"},{"size":8494,"mtime":1616415380394,"results":"58","hashOfConfig":"32"},{"size":524,"mtime":1616362414041,"results":"59","hashOfConfig":"32"},{"size":35964,"mtime":1616414831606,"results":"60","hashOfConfig":"32"},{"size":162,"mtime":1616361626016,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1dzuol4",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/yunior/sie/sie/src/index.js",[],["133","134"],"/home/yunior/sie/sie/src/themeConfig.js",[],"/home/yunior/sie/sie/src/routers/AppRouter.js",["135","136","137"],"import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from '../pages/Login';\nimport Dashboard from '../pages/Dashboard';\n\nexport const AppRouter = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/termosolares' component={Dashboard} />\n          <Route exact path='/piscinas' component={Dashboard} />\n          <Route exact path='/potencias' component={Dashboard} />\n          <Route exact path='/login' component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","/home/yunior/sie/sie/src/pages/Login.js",[],"/home/yunior/sie/sie/src/pages/Dashboard.js",["138","139","140","141","142"],"import React, {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {mainListItems, secondaryListItems} from '../components/listItems';\nimport DashboardRouter from '../routers/DashboardRouter';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {Badge} from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  large: {\n    marginTop: 10,\n    margin: '0 auto',\n    marginRight: 30,\n    marginBottom: 10,\n    width: theme.spacing(10),\n    //height: theme.spacing(7),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  let history = useHistory();\n\n  useEffect(() => {\n    localStorage.getItem('loggedin')\n      ? history.push('/')\n      : history.push('/login');\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const logOut = () => {\n    history.push('/login');\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='absolute'\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge='start'\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component='h1'\n            variant='h6'\n            color='inherit'\n            noWrap\n            className={classes.title}\n          ></Typography>\n          <IconButton color='inherit' onClick={logOut}>\n            SALIR <ExitToAppIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant='permanent'\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <img\n            alt='Logo'\n            src='http://sie-sa.com/images/gts/logos/logomediano.png'\n            className={classes.large}\n          />\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth='lg' className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <DashboardRouter />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/home/yunior/sie/sie/src/routers/DashboardRouter.js",[],"/home/yunior/sie/sie/src/hooks/useForm.js",[],"/home/yunior/sie/sie/src/services/LoginServices.js",[],"/home/yunior/sie/sie/src/components/listItems.js",["143","144","145","146","147"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {NavLink} from 'react-router-dom';\n\nexport const mainListItems = (\n  <div>\n    <NavLink className='navMenu' to='/'>\n      <ListItem button>\n        <ListItemIcon>\n          <ReceiptIcon />\n        </ListItemIcon>\n        <ListItemText primary='Bombeo' />\n      </ListItem>\n    </NavLink>\n\t<NavLink className='navMenu' to='/termosolares'>\n      <ListItem button>\n        <ListItemIcon>\n          <ReceiptIcon />\n        </ListItemIcon>\n        <ListItemText primary='Termosolares' />\n      </ListItem>\n    </NavLink>\n    <NavLink className='navMenu' to='/piscinas'>\n      <ListItem button>\n        <ListItemIcon>\n          <ReceiptIcon />\n        </ListItemIcon>\n        <ListItemText primary='Piscinas' />\n      </ListItem>\n    </NavLink>\n    <NavLink className='navMenu' to='/potencias'>\n      <ListItem button>\n        <ListItemIcon>\n          <ReceiptIcon />\n        </ListItemIcon>\n        <ListItemText primary='Potencias' />\n      </ListItem>\n    </NavLink>\n    {/* <NavLink className='navMenu' to='/products'>\n      <ListItem button>\n        <ListItemIcon>\n          <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary='Productos' />\n      </ListItem>\n    </NavLink> */}\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <NavLink className='navMenu' to='/login'>\n      <ListItem button>\n        <ListItemIcon>\n          <ExitToAppIcon />\n        </ListItemIcon>\n        <ListItemText primary='Salir' />\n      </ListItem>\n    </NavLink>\n  </div>\n);\n","/home/yunior/sie/sie/src/components/ui/SnackbarComponent.js",["148"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SnackbarComponent({open, setOpen}) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity='error'>\r\n          El Usuario o la Contraseña no coinciden, vuelva a intentar!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","/home/yunior/sie/sie/src/http-common.js",[],"/home/yunior/sie/sie/src/components/bombeo/Bombeo.js",["149","150"],"/home/yunior/sie/sie/src/components/bombeo/Data.js",["151"],"let count = 1;\nexport const col = [\n  // {\n  //   name: 'ID',\n  //   selector: 'id',\n  //   sortable: true,\n  //   cell: (d) => <span>{count++}</span>,\n  // },\n  {\n    name: 'Nro',\n    selector: 'id',\n    sortable: true,\n  },\n  {\n    name: 'FECHA',\n    selector: 'created_at',\n    sortable: true,\n    cell: (d) => <span>{d.created_at.slice(0, -8)}</span>,\n  },\n  {\n    name: 'NOMBRE',\n    selector: 'nombre',\n    sortable: true,\n  },\n  {\n    name: 'EMPRESA',\n    selector: 'empresa',\n    sortable: true,\n    //   cell: d => <span>{d.genres.join(', ')}</span>,\n  },\n  {\n    name: 'CIUDAD',\n    selector: 'municipio',\n    sortable: true,\n  },\n  {\n    name: 'USO',\n    selector: 'aplicacion',\n    sortable: true,\n  },\n];\n","/home/yunior/sie/sie/src/components/bombeo/FormBombeo.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useForm} from '../../hooks/useForm';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport BombeoServices from '../../services/BombeoServices';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AlertComponent from '../ui/AlertComponent';\n// import TableBombeo from './TableBombeo';\n\nimport Slide from '@material-ui/core/Slide';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid, Paper} from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport default function FormCustomer({\n  setNewCustomer,\n  open,\n  setOpen,\n  formEmpity,\n  setFormEmpity,\n  idCustomer,\n  setIdCustomer,\n  titleDialog,\n  setTitleDialog,\n}) {\n  const [scroll, setScroll] = useState('paper');\n  const [isLoading, setIsLoading] = useState(false);\n  const [optionsAlert, setOptionsAlert] = useState({\n    show: false,\n    severity: 'success',\n    msj: 'Guardado con éxito!',\n  });\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {current: descriptionElement} = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const [values, handleInputChange, reset] = useForm(formEmpity);\n\n  const {\n    nombre,\n    municipio,\n    empresa,\n    telefono,\n    email,\n    comunidad,\n    altitud,\n    lat,\n    long,\n\n    aplicacion,\n    req_diario_agua,\n    req_esp_temporada,\n    uso_agua_potable,\n    tanque_almacenamiento,\n    tipo_sembradio,\n    equipo_riego,\n    fuente_agua_bomb,\n    var_nivel_agua,\n    temp_agua,\n    calidad_agua,\n    vel_recuperacion,\n    diametro_pozo,\n    profundidad_pozo,\n    profundidad_agua,\n    ubi_filtros,\n    dispone_camaras,\n    dimen_deposito,\n    nivel_agua,\n    distancia_obra_paneles,\n    req_respaldo_elec,\n    req_monitoreo_remoto,\n    exis_cobertura,\n    tipo_bomba,\n    created_at,\n    altura_estatica,\n    descenso_nivel,\n    long_tuberia,\n    diametro_tub,\n    cant_accesorios,\n    volumen_deposito,\n    long_cable_motor,\n    altura_succion,\n    altura_impulsion,\n  } = values;\n\n  const handleSubmit = (e) => {\n    setIsLoading(true);\n    e.preventDefault();\n    if (idCustomer > 0) {\n      BombeoServices.update(idCustomer, values)\n        .then((response) => {\n          setIdCustomer(0);\n\n          setOptionsAlert({\n            show: true,\n            severity: 'success',\n            msj: 'Modificado con éxito!',\n          });\n          reset();\n          setNewCustomer(true);\n          setTimeout(() => {\n            setOptionsAlert({\n              show: false,\n              severity: 'success',\n              msj: 'Modificado con éxito!',\n            });\n            setOpen(false);\n            setIsLoading(false);\n          }, 2000);\n        })\n        .catch((e) => {\n          setIsLoading(false);\n          setOptionsAlert({\n            show: true,\n            severity: 'error',\n            msj: 'Ocurrio un un error, vuelva a intentar!',\n          });\n          console.log(e);\n        });\n    } else {\n      BombeoServices.create(values)\n        .then((response) => {\n          setOptionsAlert({\n            show: true,\n            severity: 'success',\n            msj: 'Guardado con éxito!',\n          });\n          reset();\n          setNewCustomer(true);\n          setTimeout(() => {\n            setOptionsAlert({\n              show: false,\n              severity: 'success',\n              msj: 'Guardado con éxito!',\n            });\n            setOpen(false);\n            setIsLoading(false);\n          }, 2000);\n        })\n        .catch((e) => {\n          setIsLoading(false);\n          setOptionsAlert({\n            show: true,\n            severity: 'error',\n            msj: 'Ocurrio un un error, vuelva a intentar!',\n          });\n          console.log(e);\n        });\n    }\n  };\n\n  const handleClickOpen = (scrollType) => () => {\n    setFormEmpity({\n      nombre: '',\n      empresa: '',\n      municipio: '',\n      telefono: '',\n    });\n    setOpen(true);\n    setScroll(scrollType);\n    setTitleDialog('Nuevo');\n  };\n\n  const handleClose = () => {\n    setIsLoading(false);\n    setOpen(false);\n    setOptionsAlert({\n      show: false,\n      severity: 'error',\n      msj: 'Ocurrio un un error, vuelva a intentar!',\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              color='inherit'\n              onClick={handleClose}\n              aria-label='close'\n            >\n              <CloseIcon />\n            </IconButton>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label='cabecera'\n              variant='scrollable'\n              scrollButtons='auto'\n            >\n              <Tab label='Contacto' {...a11yProps(0)} />\n              <Tab label='Ubicación' {...a11yProps(1)} />\n              <Tab label='Aplicación' {...a11yProps(2)} />\n              <Tab label='Obra de Toma' {...a11yProps(3)} />\n              <Tab label='Inst. Solar' {...a11yProps(4)} />\n              <Tab label='Inst. Bomba' {...a11yProps(5)} />\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n        {isLoading && <LinearProgress />}\n        <AlertComponent optionsAlert={optionsAlert} />\n\n        <DialogTitle id='scroll-dialog-title'>\n          {titleDialog} Contacto\n        </DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id='scroll-dialog-description'\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          ></DialogContentText>\n\n          <TabPanel value={value} index={0}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='nombre'\n                    label='Nombre'\n                    variant='outlined'\n                    value={nombre}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='empresa'\n                    value={empresa}\n                    label='Empresa'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='telefono'\n                    value={telefono}\n                    label='Teléfono'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='email'\n                    value={email}\n                    label='Email'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='comunidad'\n                    label='Comunidad'\n                    variant='outlined'\n                    value={comunidad}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='municipio'\n                    value={municipio}\n                    label='Ciudad'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='altitud'\n                    value={altitud}\n                    label='Altitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='lat'\n                    value={lat}\n                    label='Latitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    name='long'\n                    value={long}\n                    label='Longitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='aplicacion'\n                    label='Aplicacion'\n                    variant='outlined'\n                    value={aplicacion}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='req_diario_agua'\n                    value={req_diario_agua}\n                    label='Req. diario de agua'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='req_esp_temporada'\n                    value={req_esp_temporada}\n                    label='Requerimiento específico en temporada:'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  {uso_agua_potable && (\n                    <TextField\n                      name='uso_agua_potable'\n                      value={uso_agua_potable}\n                      label='Uso del agua potable'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n                  {tipo_sembradio && (\n                    <TextField\n                      name='tipo_sembradio'\n                      value={tipo_sembradio}\n                      label='Tipo de sembradío'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n                  {tanque_almacenamiento && (\n                    <TextField\n                      name='tanque_almacenamiento'\n                      value={tanque_almacenamiento}\n                      label='Tanque de almacenamiento'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n\n                  {equipo_riego && (\n                    <TextField\n                      name='equipo_riego'\n                      value={equipo_riego}\n                      label={'Equipos de riego'}\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='fuente_agua_bomb'\n                    label='Fuente de agua de donde será bombeada'\n                    variant='outlined'\n                    value={fuente_agua_bomb}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='var_nivel_agua'\n                    value={var_nivel_agua}\n                    label='Variaciones del nivel de agua por estaciones'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='temp_agua'\n                    value={temp_agua}\n                    label='Temperatura del agua'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='calidad_agua'\n                    value={calidad_agua}\n                    label='Calidad del agua'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    name='vel_recuperacion'\n                    value={vel_recuperacion}\n                    label='Velocidad recuperación'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  {diametro_pozo && (\n                    <TextField\n                      name='diametro_pozo'\n                      value={diametro_pozo}\n                      label='Diametro de pozo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n\n                  {profundidad_pozo && (\n                    <TextField\n                      name='profundidad_pozo'\n                      value={profundidad_pozo}\n                      label='Diametro de pozo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n\n                  {profundidad_agua && (\n                    <TextField\n                      name='profundidad_agua'\n                      value={profundidad_agua}\n                      label='Diametro de pozo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n\n                  <TextField\n                    name='ubi_filtros'\n                    value={ubi_filtros}\n                    label='Velocidad recuperación'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  {dispone_camaras && (\n                    <TextField\n                      name='dispone_camaras'\n                      value={dispone_camaras}\n                      label={'Dispone de camaras'}\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n                  {dimen_deposito && (\n                    <TextField\n                      name='dimen_deposito'\n                      value={dimen_deposito}\n                      label={'Dimensiones depósito'}\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n\n                  {nivel_agua && (\n                    <TextField\n                      name='nivel_agua'\n                      value={nivel_agua}\n                      label={'Nivel de agua'}\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  )}\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            Item Two\n          </TabPanel>\n          <TabPanel value={value} index={5}>\n            Item Three\n          </TabPanel>\n\n          {/* <TableBombeo idCustomer={idCustomer} /> */}\n        </DialogContent>\n        <DialogActions>\n          {isLoading ? (\n            <>\n              <Button color='primary' disabled>\n                Volver\n              </Button>\n              {/* <Button color='primary' disabled>\n                Guardar\n              </Button> */}\n            </>\n          ) : (\n            <>\n              <Button onClick={handleClose} color='primary'>\n                Volver\n              </Button>\n              {/* <Button onClick={handleSubmit} color='primary'>\n                Guardar\n              </Button> */}\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/home/yunior/sie/sie/src/services/BombeoServices.js",[],"/home/yunior/sie/sie/src/components/Title.js",[],"/home/yunior/sie/sie/src/components/ui/AlertComponent.js",[],"/home/yunior/sie/sie/src/hooks/useFormLogin.js",["173"],"import {useEffect, useState} from 'react';\n\nexport const useFormLogin = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n  const handleInputChange = ({target}) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n  return [values, handleInputChange];\n};\n","/home/yunior/sie/sie/src/components/piscina/Piscina.js",["174","175"],"/home/yunior/sie/sie/src/components/piscina/Data.js",[],"/home/yunior/sie/sie/src/services/PiscinaServices.js",[],"/home/yunior/sie/sie/src/components/piscina/FormPiscina.js",["176","177","178","179","180","181","182","183"],"import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useForm} from '../../hooks/useForm';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport BombeoServices from '../../services/BombeoServices';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AlertComponent from '../ui/AlertComponent';\n// import TableBombeo from './TableBombeo';\n\nimport Slide from '@material-ui/core/Slide';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid, Paper} from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport default function FormCustomer({\n  setNewCustomer,\n  open,\n  setOpen,\n  formEmpity,\n  setFormEmpity,\n  idCustomer,\n  setIdCustomer,\n  titleDialog,\n  setTitleDialog,\n}) {\n  const [scroll, setScroll] = useState('paper');\n  const [isLoading, setIsLoading] = useState(false);\n  const [optionsAlert, setOptionsAlert] = useState({\n    show: false,\n    severity: 'success',\n    msj: 'Guardado con éxito!',\n  });\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {current: descriptionElement} = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const [values, handleInputChange, reset] = useForm(formEmpity);\n\n  var {\n    //DATOS DEL CLIENTE\n    nombre,\n    empresa,\n    telefono,\n    email,\n    //UBICACION\n    ciudad,\n    municipio,\n    altitud,\n    lat,\n    long,\n    observacion_ubicacion, \n    \n    //TIPO\n    tipo_piscina,\n\n\t//DATOS TECNICOS \n\tdatos_tecnicos_ancho,\n\tdatos_tecnicos_profundidad,\n   \n\t//CARACTERISTICAS LUGAR DE INSTALACION\n    cubierta_inclinada,\n    ancho_cubierta,\n    altura_alero,\n    altura_cumbrera,\n    inclinacion,\n    acimut,\n    comentario_cubierta,\n\n\ttipo_cubierta,\n\testado_tipo_cubierta,\n\tantiguedad_tipo_cubierta,\n\taltura_cresta_tipo_cubierta,\n\tancho_tipo_cubierta,\n\tlargo_tipo_cubierta,\n\tcomentario_tipo_cubierta,\n\n\n    material_estructura_cubierta,\n    dimensiones_estructura_cubierta,\n    estado_estructura_cubierta,\n    antiguedad_estructura_cubierta,\n    distancia_correas,\n    distancia_vigas,\n    reforzamiento_estructura,\n\n    tejado_plano,\n    terminacion_cubierta,\n    long_tejado,\n    ancho_tejado,\n    altura_alero_tejado,\n    espesor_vaciado,\n    altura_parapeto,\n    acimut_tejado,\n    comentario_tejado,\n\n    //DATOS DE LA BOMBA\n    datos_bomba,\n    origen_agua,\n    potencia_bomba,\n\n    //VERIFICACIÒN TUBERIA EXISTENTE\n    verif_tuberia_existente,\n    accesorios_necesarios_codo,\n    accesorios_necesarios_cupla,\n\n    //OTROS DATOS IMPORTANTES\n    disp_agua_anual,\n    energia_electrica,\n    calidad_agua,\n    apoyo_gas,\n    req_apoyo_gas,\n    long_cable_sensores,\n    conexion_tuberias_techo,\n    trabajos_plomeria_adicional,\n    apertura_zanjas,\n    reposicion_cemento_ceramica,\n    comentario_recorrido_tuberias,\n\n  } = values;\n\n  const handleSubmit = (e) => {\n   \n  };\n\n  const handleClickOpen = (scrollType) => () => {\n    setFormEmpity({\n      nombre: '',\n      empresa: '',\n      municipio: '',\n      telefono: '',\n    });\n    setOpen(true);\n    setScroll(scrollType);\n    setTitleDialog('Nuevo');\n  };\n\n  const handleClose = () => {\n    setIsLoading(false);\n    setOpen(false);\n    setOptionsAlert({\n      show: false,\n      severity: 'error',\n      msj: 'Ocurrio un un error, vuelva a intentar!',\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              color='inherit'\n              onClick={handleClose}\n              aria-label='close'\n            >\n              <CloseIcon />\n            </IconButton>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label='cabecera'\n              variant='scrollable'\n              scrollButtons='auto'\n            >\n              <Tab label='Cliente' {...a11yProps(0)} />\n              <Tab label='Ubicación' {...a11yProps(1)} />\n              <Tab label='Tipo y uso' {...a11yProps(2)} />\n              <Tab label='Datos Tecnicos' {...a11yProps(3)} />\n              <Tab label='Caract. Del lugar de instalación' {...a11yProps(4)} />\n              <Tab label='Datos de la bomba' {...a11yProps(5)} />\n              <Tab label='Verificación de tubería existente' {...a11yProps(6)} />\n              <Tab label='Otros datos importantes' {...a11yProps(7)} />\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n        {isLoading && <LinearProgress />}\n        <AlertComponent optionsAlert={optionsAlert} />\n\n        <DialogTitle id='scroll-dialog-title'>\n          {titleDialog} Cliente\n        </DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id='scroll-dialog-description'\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          ></DialogContentText>\n\n          <TabPanel value={value} index={0}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='nombre'\n                    label='Nombre'\n                    variant='outlined'\n                    value={nombre}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='empresa'\n                    value={empresa}\n                    label='Empresa'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='telefono'\n                    value={telefono}\n                    label='Teléfono'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='email'\n                    value={email}\n                    label='Email'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          \n          <TabPanel value={value} index={1}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='ciudad'\n                    label='Ciudad'\n                    variant='outlined'\n                    value={ciudad}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='municipio'\n                    value={municipio}\n                    label='Municipio'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='altitud'\n                    value={altitud}\n                    label='Altitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='lat'\n                    value={lat}\n                    label='Latitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    name='long'\n                    value={long}\n                    label='Longitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    fullWidth\n                    name='observacion_ubicacion'\n                    value={observacion_ubicacion}\n                    label='Observaciones'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={2}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                 \n                    <TextField\n                      name='tipo_piscina'\n                      value={tipo_piscina}\n                      label='Tipo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n\t\t  <TabPanel value={value} index={3}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                 \n                    <TextField\n                      name='datos_tecnicos_ancho'\n                      value={datos_tecnicos_ancho}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n\t\t\t\t\t<TextField\n                      name='datos_tecnicos_profundidad'\n                      value={datos_tecnicos_profundidad}\n                      label='Profundidad'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\t\t  \n\t\t  <TabPanel value={value} index={4}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                    <TextField\n                      name='cubierta_inclinada'\n                      value={cubierta_inclinada}\n                      label='Cubierta inclinada'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='ancho_cubierta'\n                      value={ancho_cubierta}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_alero'\n                      value={altura_alero}\n                      label='Altura alero'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_cumbrera'\n                      value={altura_cumbrera}\n                      label='Altura de la cumbrera'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='inclinacion'\n                      value={inclinacion}\n                      label='Inclinación'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='acimut'\n                      value={acimut}\n                      label='Acimut'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_cubierta'\n                      value={comentario_cubierta}\n                      label='Comentario'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    /> \n                    <br/><br/><br/>\n\n                    <TextField\n                      name='tipo_cubierta'\n                      value={tipo_cubierta}\n                      label='Tipo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n\t\t\t\t\t<TextField\n                      name='antiguedad_tipo_cubierta'\n                      value={antiguedad_tipo_cubierta}\n                      label='Antigüedad aprox. (años)'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n\t\t\t\t\t<TextField\n                      name='estado_tipo_cubierta'\n                      value={estado_tipo_cubierta}\n                      label='Estado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n\t\t\t\t\t<TextField\n                      name='altura_cresta_tipo_cubierta'\n                      value={altura_cresta_tipo_cubierta}\n                      label='Altura'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <TextField\n                      name='ancho_tipo_cubierta'\n                      value={ancho_tipo_cubierta}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <TextField\n                      name='largo_tipo_cubierta'\n                      value={largo_tipo_cubierta}\n                      label='Largo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <TextField\n                      name='comentario_tipo_cubierta'\n                      value={comentario_tipo_cubierta}\n                      label='Comentarios'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                    <br/><br/><br/>\n                    <TextField\n                      name='material_estructura_cubierta'\n                      value={material_estructura_cubierta}\n                      label='Material estructura cubierta'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='dimensiones_estructura_cubierta'\n                      value={dimensiones_estructura_cubierta}\n                      label='Dimensiones'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='estado_estructura_cubierta'\n                      value={estado_estructura_cubierta}\n                      label='Estado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='antiguedad_estructura_cubierta'\n                      value={antiguedad_estructura_cubierta}\n                      label='Antigüedad aprox. (años)'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='distancia_correas'\n                      value={distancia_correas}\n                      label='Distancia entre correas'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='distancia_vigas'\n                      value={distancia_vigas}\n                      label='Distancia entre vigas'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='reforzamiento_estructura'\n                      value={reforzamiento_estructura}\n                      label='Necesidad de reforzamiento de la estructura'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    {/* TEJADO PLANO */}\n                    <br/><br/><br/>\n                    <TextField\n                      name='tejado_plano'\n                      value={tejado_plano}\n                      label='Tejado plano (Loza)'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='terminacion_cubierta'\n                      value={terminacion_cubierta}\n                      label='Terminación de cubierta '\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='long_tejado'\n                      value={long_tejado}\n                      label='Longitud'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='ancho_tejado'\n                      value={ancho_tejado}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_alero_tejado'\n                      value={altura_alero_tejado}\n                      label='Altura del alero'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='espesor_vaciado'\n                      value={espesor_vaciado}\n                      label='Espesor de vaciado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_parapeto'\n                      value={altura_parapeto}\n                      label='Altura del parapeto'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='acimut_tejado'\n                      value={acimut_tejado}\n                      label='Acimut'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_tejado'\n                      value={comentario_tejado}\n                      label='Comentario'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={5}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                    <TextField\n                      name='datos_bomba'\n                      value={datos_bomba}\n                      label='Datos bomba'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='origen_agua'\n                      value={origen_agua}\n                      label='Origen del agua'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='potencia_bomba'\n                      value={potencia_bomba}\n                      label='Potencia de la bomba'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={6}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                    <TextField\n                      name='verif_tuberia_existente'\n                      value={verif_tuberia_existente}\n                      label='Datos bomba'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <br/><br/><br/>\n                    <TextField\n                      name='accesorios_necesarios_codo'\n                      value={accesorios_necesarios_codo}\n                      label='Codo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='accesorios_necesarios_cupla'\n                      value={accesorios_necesarios_cupla}\n                      label='Cupla'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n            <TabPanel value={value} index={7}>\n                <Grid item xs={12} className={classes.rootGrid}>\n                    <Paper elevation={0} className={classes.paper}>\n                        <form className={classes.root} noValidate autoComplete='off'>\n                            <TextField\n                              name='disp_agua_anual'\n                              value={disp_agua_anual}\n                              label='Disponibilidad de agua anual'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='energia_electrica'\n                              value={energia_electrica}\n                              label='Cuenta con energía eléctrica'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='calidad_agua'\n                              value={calidad_agua}\n                              label='Calidad de agua'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='apoyo_gas'\n                              value={apoyo_gas}\n                              label='Tiene apoyo a Gas'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='req_apoyo_gas'\n                              value={req_apoyo_gas}\n                              label='Requiere Apoyo Gas '\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='long_cable_sensores'\n                              value={long_cable_sensores}\n                              label='Longitud de Cable para los sensores'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='conexion_tuberias_techo'\n                              value={conexion_tuberias_techo}\n                              label='Tiene conexión de tuberías al techo'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='trabajos_plomeria_adicional'\n                              value={trabajos_plomeria_adicional}\n                              label='Trabajos de plomería adicional'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='apertura_zanjas'\n                              value={apertura_zanjas}\n                              label='Apertura de zanjas'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='reposicion_cemento_ceramica'\n                              value={reposicion_cemento_ceramica}\n                              label='Reposición de cemento/cerámica '\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                            <TextField\n                              name='reposicion_cemento_ceramica'\n                              value={comentario_recorrido_tuberias}\n                              label='Comentario'\n                              variant='outlined'\n                              onChange={handleInputChange}\n                              InputProps={{\n                                readOnly: true,\n                              }}\n                            />\n                        </form>\n                    </Paper>\n                </Grid>\n            </TabPanel>\n\t\t  \n          {/* <TableBombeo idCustomer={idCustomer} /> */}\n        </DialogContent>\n        <DialogActions>\n          {isLoading ? (\n            <>\n              <Button color='primary' disabled>\n                Volver\n              </Button>\n              {/* <Button color='primary' disabled>\n                Guardar\n              </Button> */}\n            </>\n          ) : (\n            <>\n              <Button onClick={handleClose} color='primary'>\n                Volver\n              </Button>\n              {/* <Button onClick={handleSubmit} color='primary'>\n                Guardar\n              </Button> */}\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/home/yunior/sie/sie/src/components/termosolar/Termosolar.js",["184","185"],"/home/yunior/sie/sie/src/components/termosolar/Data.js",[],"/home/yunior/sie/sie/src/components/termosolar/FormTermosolar.js",["186","187","188","189","190","191","192","193"],"import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useForm} from '../../hooks/useForm';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AlertComponent from '../ui/AlertComponent';\n\nimport Slide from '@material-ui/core/Slide';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid, Paper} from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport default function FormCustomer({\n  setNewCustomer,\n  open,\n  setOpen,\n  formEmpity,\n  setFormEmpity,\n  idCustomer,\n  setIdCustomer,\n  titleDialog,\n  setTitleDialog,\n}) {\n  const [scroll, setScroll] = useState('paper');\n  const [isLoading, setIsLoading] = useState(false);\n  const [optionsAlert, setOptionsAlert] = useState({\n    show: false,\n    severity: 'success',\n    msj: 'Guardado con éxito!',\n  });\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {current: descriptionElement} = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const [values, handleInputChange, reset] = useForm(formEmpity);\n\n  const {\n    //DATOS DEL CLIENTE\n    nombre,\n    empresa,\n    telefono,\n    email,\n    //UBICACION\n    ciudad,\n    municipio,\n    altitud,\n    lat,\n    long,\n    observacion_ubicacion, \n    //CONSUMO AGUA CALIENTE\n    consumo_agua_caliente,\n    punto_consumo,\n\n    //CARACTERÍSTICAS DEL LUGAR DE INSTALACIÓN\n    cubierta_inclinada,\n    long_cubierta,\n    ancho_cubierta,\n    altura_alero,\n    altura_cumbrera,\n    inclinacion,\n    acimut,\n    comentario_cubierta,\n\n    tipo_cubierta,\n    estado_tipo_cubierta,\n    antiguedad_tipo_cubierta,\n    altura_cresta,\n    ancho_tipo_cubierta,\n    largo_tipo_cubierta,\n    comentario_tipo_cubierta,\n\n    material_estructura_cubierta,\n    dimensiones_estructura_cubierta,\n    estado_estructura_cubierta,\n    //antiguedad_estructura_cubierta,\n    distancia_correas,\n    distancia_vigas,\n    reforzamiento_estructura,\n\n    tejado_plano,\n    terminacion_cubierta,\n    long_tejado,\n    ancho_tejado,\n    altura_alero_tejado,\n    espesor_vaciado,\n    altura_parapeto,\n    acimut_tejado,\n    comentario_tejado,\n\n    altura_tanque_agua,\n    presion_bomba,\n    presion_red,\n    cuenta_con_filtro,\n\n    //OTRAS CARACTERÍSTICAS DEL SITIO DE INSTALACION\n    disponibilidad_agua_anual,\n    energia_electrica,\n    calidad_agua,\n    apoyo_electrico,\n    long_cable_sensores,\n    energia_electrica_controlador,\n    red_agua_caliente,\n\n    material_exist_frio_tuberia,\n    material_exist_frio_codo,\n\n    material_exist_caliente_pvc,\n    material_exist_caliente_ips,\n\n    accesorios_necesarios_codos,\n    accesorios_necesarios_cupla,\n    \n  } = values;\n\n  const handleSubmit = (e) => {\n   \n  };\n\n  const handleClickOpen = (scrollType) => () => {\n    setFormEmpity({\n      nombre: '',\n      empresa: '',\n      municipio: '',\n      telefono: '',\n    });\n    setOpen(true);\n    setScroll(scrollType);\n    setTitleDialog('Nuevo');\n  };\n\n  const handleClose = () => {\n    setIsLoading(false);\n    setOpen(false);\n    setOptionsAlert({\n      show: false,\n      severity: 'error',\n      msj: 'Ocurrio un un error, vuelva a intentar!',\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              color='inherit'\n              onClick={handleClose}\n              aria-label='close'\n            >\n              <CloseIcon />\n            </IconButton>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label='cabecera'\n              variant='scrollable'\n              scrollButtons='auto'\n            >\n              <Tab label='Cliente' {...a11yProps(0)} />\n              <Tab label='Ubicación' {...a11yProps(1)} />\n              <Tab label='Consumo de agua caliente' {...a11yProps(2)} />\n              <Tab label='Caract. Del lugar de instalación' {...a11yProps(3)} />\n              <Tab label='Otras Caract. Del sitio de instalaciòn' {...a11yProps(4)} />\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n        {isLoading && <LinearProgress />}\n        <AlertComponent optionsAlert={optionsAlert} />\n\n        <DialogTitle id='scroll-dialog-title'>\n          {titleDialog} Cliente\n        </DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id='scroll-dialog-description'\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          ></DialogContentText>\n\n            <TabPanel value={value} index={0}>\n                <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='nombre'\n                    label='Nombre'\n                    variant='outlined'\n                    value={nombre}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='empresa'\n                    value={empresa}\n                    label='Empresa'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='telefono'\n                    value={telefono}\n                    label='Teléfono'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='email'\n                    value={email}\n                    label='Email'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n                </Grid>\n            </TabPanel>\n          \n            <TabPanel value={value} index={1}>\n                    <Grid item xs={12} className={classes.rootGrid}>\n                        <Paper elevation={0} className={classes.paper}>\n                        <form className={classes.root} noValidate autoComplete='off'>\n                          <TextField\n                            name='ciudad'\n                            label='Ciudad'\n                            variant='outlined'\n                            value={ciudad}\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n                          <TextField\n                            name='municipio'\n                            value={municipio}\n                            label='Municipio'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n                          <TextField\n                            name='altitud'\n                            value={altitud}\n                            label='Altitud'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n                          <TextField\n                            name='lat'\n                            value={lat}\n                            label='Latitud'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n\n                          <TextField\n                            name='long'\n                            value={long}\n                            label='Longitud'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n\n                          <TextField\n                            fullWidth\n                            name='observacion_ubicacion'\n                            value={observacion_ubicacion}\n                            label='Observaciones'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                          />\n                        </form>\n                    </Paper>\n                </Grid>\n            </TabPanel>\n\n            <TabPanel value={value} index={2}>\n                <Grid item xs={12} className={classes.rootGrid}>\n                  <Paper elevation={0} className={classes.paper}>\n                    <form className={classes.root} noValidate autoComplete='off'>\n                        <TextField\n                            name='consumo_agua_caliente'\n                            label='Consumo de agua caliente'\n                            variant='outlined'\n                            value={consumo_agua_caliente}\n                            onChange={handleInputChange}\n                            InputProps={{\n                              readOnly: true,\n                            }}\n                        />\n                        <TextField\n                            name='punto_consumo'\n                            value={punto_consumo}\n                            label='Puntos de consumo'\n                            variant='outlined'\n                            onChange={handleInputChange}\n                            InputProps={{\n                                readOnly: true,\n                            }}\n                        />\n                    </form>\n                  </Paper>\n                </Grid>\n            </TabPanel>\n\n            <TabPanel value={value} index={3}>\n                <Grid item xs={12} className={classes.rootGrid}>\n                  <Paper elevation={0} className={classes.paper}>\n                    <form className={classes.root} noValidate autoComplete='off'>\n                        <TextField\n                          name='cubierta_inclinada'\n                          value={cubierta_inclinada}\n                          label='Cubierta inclinada'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='ancho_cubierta'\n                          value={ancho_cubierta}\n                          label='Ancho'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='altura_alero'\n                          value={altura_alero}\n                          label='Altura alero'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='altura_cumbrera'\n                          value={altura_cumbrera}\n                          label='Altura de la cumbrera'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='inclinacion'\n                          value={inclinacion}\n                          label='Inclinación'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='acimut'\n                          value={acimut}\n                          label='Acimut'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='comentario_cubierta'\n                          value={comentario_cubierta}\n                          label='Comentario'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        /> \n                        \n                        <br/><br/><br/>\n                        <TextField\n                          name='tipo_cubierta'\n                          value={tipo_cubierta}\n                          label='Tipo'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='antiguedad_tipo_cubierta'\n                          value={antiguedad_tipo_cubierta}\n                          label='Antigüedad aprox. (años)'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='estado_tipo_cubierta'\n                          value={estado_tipo_cubierta}\n                          label='Estado'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='altura_cresta'\n                          value={altura_cresta}\n                          label='Altura de la cresta'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='ancho_tipo_cubierta'\n                          value={ancho_tipo_cubierta}\n                          label='Ancho'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='largo_tipo_cubierta'\n                          value={largo_tipo_cubierta}\n                          label='Largo'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <TextField\n                          name='comentario_tipo_cubierta'\n                          value={comentario_tipo_cubierta}\n                          label='Comentarios'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <br/><br/><br/>\n\n                        <TextField\n                          name='material_estructura_cubierta'\n                          value={material_estructura_cubierta}\n                          label='Material estructura cubierta'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='dimensiones_estructura_cubierta'\n                          value={dimensiones_estructura_cubierta}\n                          label='Dimensiones'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='estado_estructura_cubierta'\n                          value={estado_estructura_cubierta}\n                          label='Estado'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        {/*<TextField\n                          name='antiguedad_estructura_cubierta'\n                          value={antiguedad_estructura_cubierta}\n                          label='Antigüedad aprox. (años)'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />*/}\n                        <TextField\n                          name='distancia_correas'\n                          value={distancia_correas}\n                          label='Distancia entre correas'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='distancia_vigas'\n                          value={distancia_vigas}\n                          label='Distancia entre vigas'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='reforzamiento_estructura'\n                          value={reforzamiento_estructura}\n                          label='Necesidad de reforzamiento de la estructura'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n\n                        <br/><br/><br/>\n                        <TextField\n                          name='tejado_plano'\n                          value={tejado_plano}\n                          label='Tejado plano (Loza)'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='terminacion_cubierta'\n                          value={terminacion_cubierta}\n                          label='Terminación de cubierta '\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='long_tejado'\n                          value={long_tejado}\n                          label='Longitud'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='ancho_tejado'\n                          value={ancho_tejado}\n                          label='Ancho'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='altura_alero_tejado'\n                          value={altura_alero_tejado}\n                          label='Altura del alero'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='espesor_vaciado'\n                          value={espesor_vaciado}\n                          label='Espesor de vaciado'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='altura_parapeto'\n                          value={altura_parapeto}\n                          label='Altura del parapeto'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='acimut_tejado'\n                          value={acimut_tejado}\n                          label='Acimut'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='comentario_tejado'\n                          value={comentario_tejado}\n                          label='Comentario'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <br/><br/><br/>\n                        \n                        <TextField\n                          name='altura_tanque_agua'\n                          value={altura_tanque_agua}\n                          label='Altura del tanque de agua respecto al nivel de cubierta termosolar'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='presion_bomba'\n                          value={presion_bomba}\n                          label='Presión de trabajo de la bomba'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='presion_red'\n                          value={presion_red}\n                          label='Presión de trabajo de la red'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                        <TextField\n                          name='cuenta_con_filtro'\n                          value={cuenta_con_filtro}\n                          label='En caso de pozo propio ¿cuenta con filtro?'\n                          variant='outlined'\n                          onChange={handleInputChange}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                        />\n                    </form>\n                  </Paper>\n                </Grid>\n            </TabPanel>\n\n            <TabPanel value={value} index={4}>\n                <Grid item xs={12} className={classes.rootGrid}>\n                    <Paper elevation={0} className={classes.paper}>\n                        <form className={classes.root} noValidate autoComplete='off'>\n                            <TextField\n                                name='disponibilidad_agua_anual'\n                                label='Disponibilidad de agua anual'\n                                variant='outlined'\n                                value={disponibilidad_agua_anual}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='energia_electrica'\n                                label='Cuenta con energía eléctrica'\n                                variant='outlined'\n                                value={energia_electrica}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='calidad_agua'\n                                label='Calidad de agua'\n                                variant='outlined'\n                                value={calidad_agua}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='apoyo_electrico'\n                                label='¿Requiere apoyo eléctrico?'\n                                variant='outlined'\n                                value={apoyo_electrico}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='long_cable_sensores'\n                                label='Longitud de cable para los sensores'\n                                variant='outlined'\n                                value={long_cable_sensores}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='energia_electrica_controlador'\n                                label='Disponibilidad de energía eléctrica para el controlador'\n                                variant='outlined'\n                                value={energia_electrica_controlador}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='red_agua_caliente'\n                                label='¿Existe red de agua caliente?'\n                                variant='outlined'\n                                value={red_agua_caliente}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <br/><br/><br/>\n\n                            <TextField\n                                name='material_exist_frio_tuberia'\n                                label='tuberia'\n                                variant='outlined'\n                                value={material_exist_frio_tuberia}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='material_exist_frio_codo'\n                                label='codo'\n                                variant='outlined'\n                                value={material_exist_frio_codo}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <br/><br/><br/>\n\n                            <TextField\n                                name='material_exist_caliente_pvc'\n                                label='pvc'\n                                variant='outlined'\n                                value={material_exist_caliente_pvc}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='material_exist_caliente_ips'\n                                label='ips'\n                                variant='outlined'\n                                value={material_exist_caliente_ips}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <br/><br/><br/>\n\n                            <TextField\n                                name='accesorios_necesarios_codos'\n                                label='codos'\n                                variant='outlined'\n                                value={accesorios_necesarios_codos}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            <TextField\n                                name='accesorios_necesarios_cupla'\n                                label='cupla'\n                                variant='outlined'\n                                value={accesorios_necesarios_cupla}\n                                onChange={handleInputChange}\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                            />\n                            \n                        </form>\n                    </Paper>\n                </Grid>\n            </TabPanel>\n          {/* <TableBombeo idCustomer={idCustomer} /> */}\n        </DialogContent>\n        <DialogActions>\n          {isLoading ? (\n            <>\n              <Button color='primary' disabled>\n                Volver\n              </Button>\n              {/* <Button color='primary' disabled>\n                Guardar\n              </Button> */}\n            </>\n          ) : (\n            <>\n              <Button onClick={handleClose} color='primary'>\n                Volver\n              </Button>\n              {/* <Button onClick={handleSubmit} color='primary'>\n                Guardar\n              </Button> */}\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","/home/yunior/sie/sie/src/services/TermosolarServices.js",[],"/home/yunior/sie/sie/src/components/potencia/Potencia.js",["194","195"],"/home/yunior/sie/sie/src/components/potencia/Data.js",[],"/home/yunior/sie/sie/src/components/potencia/FormPotencia.js",["196","197","198","199","200","201","202"],"import React, {useState, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useForm} from '../../hooks/useForm';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AlertComponent from '../ui/AlertComponent';\n// import TableBombeo from './TableBombeo';\n\nimport Slide from '@material-ui/core/Slide';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {Grid, Paper} from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '25ch',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nexport default function FormCustomer({\n  setNewCustomer,\n  open,\n  setOpen,\n  formEmpity,\n  setFormEmpity,\n  idCustomer,\n  setIdCustomer,\n  titleDialog,\n  setTitleDialog,\n}) {\n  const [scroll, setScroll] = useState('paper');\n  const [isLoading, setIsLoading] = useState(false);\n  const [optionsAlert, setOptionsAlert] = useState({\n    show: false,\n    severity: 'success',\n    msj: 'Guardado con éxito!',\n  });\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {current: descriptionElement} = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const [values, handleInputChange, reset] = useForm(formEmpity);\n\n  var {\n    //DATOS DEL CLIENTE\n    nombre,\n    empresa,\n    telefono,\n    email,\n    //UBICACION\n    ciudad,\n    municipio,\n    altitud,\n    lat,\n    long,\n    observacion_ubicacion,\n    //TIPO DE CONSUMO\n    tipo_consumo,\n    num_medidor,\n    num_cliente,\n    observacion_cliente, \n\n    //CARACTERISTICAS DEL LUGAR DE INSTALACIÒN \n    cubierta_inclinada,\n    ancho,\n    altura_alero,\n    altura_cumbrera,\n    inclinacion,\n    acimut,\n    comentario_lugar_instalacion,\n\n    tipo_cubierta,\n    antiguedad_tipo_cubierta,\n    estado_tipo_cubierta,\n    altura_cresta_tipo_cubierta,\n    ancho_tipo_cubierta,\n    largo_tipo_cubierta,\n    comentario_tipo_cubierta,\n\n    dimensiones_material_cubierta,\n    estado_material_cubierta,\n    antiguedad_material_cubieta,\n    distancia_correas_material,\n    distancia_vigas_material,\n    comentario_material_estructura,\n\n    terminacion_cubierta,\n    ancho_tejado,\n    altura_alero_tejado,\n    espesor_vaciado_tejado,\n    altura_parapeto_tejado,\n    acimut_tejado,\n    comentario_tejado_plano,\n\n    presencia_sombras,\n    linea_vida,\n    planos_digitales,\n    tipo_documento,\n    sugerencia_modulos_fotovoltaicos,\n\n    tipo_medidor,\n    tipo_alimentacion_tipo,\n    puesta_tierra,\n    voltaje,\n    control_externo,\n    ambiente_protecciones_medidor,\n    punto_inyeccion,\n    identifican_fases,\n    identifican_colores,\n    capacidad_breaker,\n    identifican_pararayos,\n    identifican_sistema_respaldo,\n    planos_electricos,\n    especifique,\n\n    long_cableado,\n    material_cableado,\n\n    wifi,\n    wifi_cobertura,\n    cobertura_wifi_modulos_fotovoltaicos,\n    rack_ethernet,\n    rack_proximo_inversor,\n    distancia,\n  \n  } = values;\n\n  const handleSubmit = (e) => {\n   \n  };\n\n  const handleClickOpen = (scrollType) => () => {\n    setFormEmpity({\n      nombre: '',\n      empresa: '',\n      municipio: '',\n      telefono: '',\n    });\n    setOpen(true);\n    setScroll(scrollType);\n    setTitleDialog('Nuevo');\n  };\n\n  const handleClose = () => {\n    setIsLoading(false);\n    setOpen(false);\n    setOptionsAlert({\n      show: false,\n      severity: 'error',\n      msj: 'Ocurrio un un error, vuelva a intentar!',\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby='scroll-dialog-title'\n        aria-describedby='scroll-dialog-description'\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge='start'\n              color='inherit'\n              onClick={handleClose}\n              aria-label='close'\n            >\n              <CloseIcon />\n            </IconButton>\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label='cabecera'\n              variant='scrollable'\n              scrollButtons='auto'\n            >\n              <Tab label='Cliente' {...a11yProps(0)} />\n              <Tab label='Ubicación' {...a11yProps(1)} />\n              <Tab label='Tipo de consumo' {...a11yProps(2)} />\n              <Tab label='Caract. Del lugar de instalación' {...a11yProps(3)} />\n              <Tab label='Características eléctricas y comunicación' {...a11yProps(4)} />\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n        {isLoading && <LinearProgress />}\n        <AlertComponent optionsAlert={optionsAlert} />\n\n        <DialogTitle id='scroll-dialog-title'>\n          {titleDialog} Cliente\n        </DialogTitle>\n\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id='scroll-dialog-description'\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          ></DialogContentText>\n\n          <TabPanel value={value} index={0}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='nombre'\n                    label='Nombre'\n                    variant='outlined'\n                    value={nombre}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='empresa'\n                    value={empresa}\n                    label='Empresa'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='telefono'\n                    value={telefono}\n                    label='Teléfono'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='email'\n                    value={email}\n                    label='Email'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          \n          <TabPanel value={value} index={1}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='ciudad'\n                    label='Ciudad'\n                    variant='outlined'\n                    value={ciudad}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='municipio'\n                    value={municipio}\n                    label='Municipio'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='altitud'\n                    value={altitud}\n                    label='Altitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='lat'\n                    value={lat}\n                    label='Latitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n\n                  <TextField\n                    name='long'\n                    value={long}\n                    label='Longitud'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    fullWidth\n                    name='observacion_ubicacion'\n                    value={observacion_ubicacion}\n                    label='Observaciones'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={2}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                    name='tipo_consumo'\n                    label='Tipo consumo'\n                    variant='outlined'\n                    value={tipo_consumo}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='num_medidor'\n                    label='Número de medidor(es)'\n                    variant='outlined'\n                    value={num_medidor}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='num_cliente'\n                    label='Número de cliente'\n                    variant='outlined'\n                    value={num_cliente}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />   \n                  <TextField\n                    fullWidth\n                    name='observacion_cliente'\n                    value={observacion_cliente}\n                    label='Observaciones'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={3}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                  <TextField\n                      name='cubierta_inclinada'\n                      value={cubierta_inclinada}\n                      label='Cubierta inclinada'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='ancho'\n                      value={ancho}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_alero'\n                      value={altura_alero}\n                      label='Altura alero'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_cumbrera'\n                      value={altura_cumbrera}\n                      label='Altura de la cumbrera'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='inclinacion'\n                      value={inclinacion}\n                      label='Inclinación'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='acimut'\n                      value={acimut}\n                      label='Acimut'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_lugar_instalacion'\n                      value={comentario_lugar_instalacion}\n                      label='Comentario'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    /> \n                    <br/><br/><br/>\n\n                    <TextField\n                      name='tipo_cubierta'\n                      value={tipo_cubierta}\n                      label='Tipo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='antiguedad_tipo_cubierta'\n                      value={antiguedad_tipo_cubierta}\n                      label='Antigüedad aprox. (años)'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='estado_tipo_cubierta'\n                      value={estado_tipo_cubierta}\n                      label='Estado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_cresta_tipo_cubierta'\n                      value={altura_cresta_tipo_cubierta}\n                      label='Altura'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='ancho_tipo_cubierta'\n                      value={ancho_tipo_cubierta}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='largo_tipo_cubierta'\n                      value={largo_tipo_cubierta}\n                      label='Largo'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_tipo_cubierta'\n                      value={comentario_tipo_cubierta}\n                      label='Comentarios'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <br/><br/><br/>\n\n                    <TextField\n                      name='dimensiones_material_cubierta'\n                      value={dimensiones_material_cubierta}\n                      label='Dimensiones'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='estado_material_cubierta'\n                      value={estado_material_cubierta}\n                      label='Estado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='antiguedad_material_cubieta'\n                      value={antiguedad_material_cubieta}\n                      label='Antigüedad aprox. (años)'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='distancia_correas_material'\n                      value={distancia_correas_material}\n                      label='Distancia entre correas'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='distancia_vigas_material'\n                      value={distancia_vigas_material}\n                      label='Distancia entre vigas'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_material_estructura'\n                      value={comentario_material_estructura}\n                      label='comentario'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <br/><br/><br/>\n\n                    <TextField\n                      name='terminacion_cubierta'\n                      value={terminacion_cubierta}\n                      label='Terminación de cubierta'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='ancho_tejado'\n                      value={ancho_tejado}\n                      label='Ancho'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_alero_tejado'\n                      value={altura_alero_tejado}\n                      label='Altura alero'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='espesor_vaciado_tejado'\n                      value={espesor_vaciado_tejado}\n                      label='Espesor de vaciado'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='altura_parapeto_tejado'\n                      value={altura_parapeto_tejado}\n                      label='Altura del parapeto'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='acimut_tejado'\n                      value={acimut_tejado}\n                      label='Acimut'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='comentario_tejado_plano'\n                      value={comentario_tejado_plano}\n                      label='Comentario'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <br/><br/><br/>\n                    \n                    <TextField\n                      name='presencia_sombras'\n                      value={presencia_sombras}\n                      label='Presencia de sombras en el lugar'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='linea_vida'\n                      value={linea_vida}\n                      label='¿Cuenta con línea de vida?'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='planos_digitales'\n                      value={planos_digitales}\n                      label='¿Cuenta con línea de vida?'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='tipo_documento'\n                      value={tipo_documento}\n                      label='Tipo de documento'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                    <TextField\n                      name='sugerencia_modulos_fotovoltaicos'\n                      value={sugerencia_modulos_fotovoltaicos}\n                      label='sugerencia del emplazamiento de módulos fotovoltaicos'\n                      variant='outlined'\n                      onChange={handleInputChange}\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={value} index={4}>\n            <Grid item xs={12} className={classes.rootGrid}>\n              <Paper elevation={0} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete='off'>\n                   <TextField\n                    fullWidth\n                    name='tipo_medidor'\n                    value={tipo_medidor}\n                    label='Tipo de medidor'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <br/><br/><br/>\n\n                  <TextField\n                    name='tipo_alimentacion_tipo'\n                    value={tipo_alimentacion_tipo}\n                    label='Tipo de alimentación'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='puesta_tierra'\n                    value={puesta_tierra}\n                    label='Sistema de puesta a tierra'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='voltaje'\n                    value={voltaje}\n                    label='Voltaje N-PE'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                   <TextField\n                    name='control_externo'\n                    value={control_externo}\n                    label='Requiere tablero de control externo'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='ambiente_protecciones_medidor'\n                    value={ambiente_protecciones_medidor}\n                    label='Dispone ambientes de montaje para protecciones y el un medidor de energía'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='punto_inyeccion'\n                    value={punto_inyeccion}\n                    label='¿El punto de inyección es accesible?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='identifican_fases'\n                    value={identifican_fases}\n                    label='¿Se identifican las fases?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='identifican_colores'\n                    value={identifican_colores}\n                    label='¿Se identifica colores bajo norma?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='capacidad_breaker'\n                    value={capacidad_breaker}\n                    label='Capacidad - Breaker principal (A)'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='identifican_pararayos'\n                    value={identifican_pararayos}\n                    label='¿Se identifican pararrayos?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='identifican_sistema_respaldo'\n                    value={identifican_sistema_respaldo}\n                    label='¿Se identifica un sistema de respaldo?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='planos_electricos'\n                    value={planos_electricos}\n                    label='¿Se cuenta con planos eléctricos?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='especifique'\n                    value={especifique}\n                    label='Especifique'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <br/><br/><br/>\n\n                  <TextField\n                    name='long_cableado'\n                    value={long_cableado}\n                    label='Longitud cableado'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='material_cableado'\n                    value={material_cableado}\n                    label='Material(es) cableado'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <br/><br/><br/>\n\n                  <TextField\n                    name='wifi'\n                    value={wifi}\n                    label='¿Cuenta con Wi – Fi?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  /> \n                  <TextField\n                    name='wifi_cobertura'\n                    value={wifi_cobertura}\n                    label='¿La señal Wi – Fi tiene cobertura hasta la posición del inversor?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='cobertura_wifi_modulos_fotovoltaicos'\n                    value={cobertura_wifi_modulos_fotovoltaicos}\n                    label='¿La señal Wi – Fi tiene cobertura hasta la posición de los módulos fotovoltaicos?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='rack_ethernet'\n                    value={rack_ethernet}\n                    label='¿Cuenta con un Rack Ethernet?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='rack_proximo_inversor'\n                    value={rack_proximo_inversor}\n                    label='¿El Rack es próximo al inversor?'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                  <TextField\n                    name='distancia'\n                    value={distancia}\n                    label='Distancia (m)'\n                    variant='outlined'\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                    }}\n                  />\n                     \n                </form>\n              </Paper>\n            </Grid>\n          </TabPanel>\n          {/* <TableBombeo idCustomer={idCustomer} /> */}\n        </DialogContent>\n        <DialogActions>\n          {isLoading ? (\n            <>\n              <Button color='primary' disabled>\n                Volver\n              </Button>\n              {/* <Button color='primary' disabled>\n                Guardar\n              </Button> */}\n            </>\n          ) : (\n            <>\n              <Button onClick={handleClose} color='primary'>\n                Volver\n              </Button>\n              {/* <Button onClick={handleSubmit} color='primary'>\n                Guardar\n              </Button> */}\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","/home/yunior/sie/sie/src/services/PotenciaServices.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":1,"column":26,"nodeType":"209","messageId":"210","endLine":1,"endColumn":35},{"ruleId":"207","severity":1,"message":"211","line":7,"column":10,"nodeType":"209","messageId":"210","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":7,"column":27,"nodeType":"209","messageId":"210","endLine":7,"endColumn":45},{"ruleId":"207","severity":1,"message":"213","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":11},{"ruleId":"207","severity":1,"message":"214","line":17,"column":8,"nodeType":"209","messageId":"210","endLine":17,"endColumn":12},{"ruleId":"207","severity":1,"message":"215","line":20,"column":8,"nodeType":"209","messageId":"210","endLine":20,"endColumn":25},{"ruleId":"207","severity":1,"message":"216","line":24,"column":9,"nodeType":"209","messageId":"210","endLine":24,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":124,"column":6,"nodeType":"219","endLine":124,"endColumn":8,"suggestions":"220"},{"ruleId":"207","severity":1,"message":"221","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":21},{"ruleId":"207","severity":1,"message":"222","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"207","severity":1,"message":"223","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":24},{"ruleId":"207","severity":1,"message":"224","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":20},{"ruleId":"207","severity":1,"message":"225","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":22},{"ruleId":"207","severity":1,"message":"226","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"227","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":49,"column":9,"nodeType":"209","messageId":"210","endLine":49,"endColumn":24},{"ruleId":"207","severity":1,"message":"229","line":1,"column":5,"nodeType":"209","messageId":"210","endLine":1,"endColumn":10},{"ruleId":"207","severity":1,"message":"230","line":18,"column":8,"nodeType":"209","messageId":"210","endLine":18,"endColumn":20},{"ruleId":"207","severity":1,"message":"231","line":19,"column":8,"nodeType":"209","messageId":"210","endLine":19,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":20,"column":8,"nodeType":"209","messageId":"210","endLine":20,"endColumn":12},{"ruleId":"207","severity":1,"message":"233","line":21,"column":8,"nodeType":"209","messageId":"210","endLine":21,"endColumn":15},{"ruleId":"207","severity":1,"message":"234","line":156,"column":5,"nodeType":"209","messageId":"210","endLine":156,"endColumn":27},{"ruleId":"207","severity":1,"message":"235","line":157,"column":5,"nodeType":"209","messageId":"210","endLine":157,"endColumn":22},{"ruleId":"207","severity":1,"message":"236","line":158,"column":5,"nodeType":"209","messageId":"210","endLine":158,"endColumn":25},{"ruleId":"207","severity":1,"message":"237","line":159,"column":5,"nodeType":"209","messageId":"210","endLine":159,"endColumn":19},{"ruleId":"207","severity":1,"message":"238","line":160,"column":5,"nodeType":"209","messageId":"210","endLine":160,"endColumn":15},{"ruleId":"207","severity":1,"message":"239","line":161,"column":5,"nodeType":"209","messageId":"210","endLine":161,"endColumn":15},{"ruleId":"207","severity":1,"message":"240","line":162,"column":5,"nodeType":"209","messageId":"210","endLine":162,"endColumn":20},{"ruleId":"207","severity":1,"message":"241","line":163,"column":5,"nodeType":"209","messageId":"210","endLine":163,"endColumn":19},{"ruleId":"207","severity":1,"message":"242","line":164,"column":5,"nodeType":"209","messageId":"210","endLine":164,"endColumn":17},{"ruleId":"207","severity":1,"message":"243","line":165,"column":5,"nodeType":"209","messageId":"210","endLine":165,"endColumn":17},{"ruleId":"207","severity":1,"message":"244","line":166,"column":5,"nodeType":"209","messageId":"210","endLine":166,"endColumn":20},{"ruleId":"207","severity":1,"message":"245","line":167,"column":5,"nodeType":"209","messageId":"210","endLine":167,"endColumn":21},{"ruleId":"207","severity":1,"message":"246","line":168,"column":5,"nodeType":"209","messageId":"210","endLine":168,"endColumn":21},{"ruleId":"207","severity":1,"message":"247","line":169,"column":5,"nodeType":"209","messageId":"210","endLine":169,"endColumn":19},{"ruleId":"207","severity":1,"message":"248","line":170,"column":5,"nodeType":"209","messageId":"210","endLine":170,"endColumn":21},{"ruleId":"207","severity":1,"message":"249","line":173,"column":9,"nodeType":"209","messageId":"210","endLine":173,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":239,"column":9,"nodeType":"209","messageId":"210","endLine":239,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":1,"column":9,"nodeType":"209","messageId":"210","endLine":1,"endColumn":18},{"ruleId":"207","severity":1,"message":"227","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":50,"column":9,"nodeType":"209","messageId":"210","endLine":50,"endColumn":24},{"ruleId":"207","severity":1,"message":"250","line":12,"column":8,"nodeType":"209","messageId":"210","endLine":12,"endColumn":22},{"ruleId":"207","severity":1,"message":"230","line":18,"column":8,"nodeType":"209","messageId":"210","endLine":18,"endColumn":20},{"ruleId":"207","severity":1,"message":"231","line":19,"column":8,"nodeType":"209","messageId":"210","endLine":19,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":20,"column":8,"nodeType":"209","messageId":"210","endLine":20,"endColumn":12},{"ruleId":"207","severity":1,"message":"233","line":21,"column":8,"nodeType":"209","messageId":"210","endLine":21,"endColumn":15},{"ruleId":"207","severity":1,"message":"251","line":124,"column":37,"nodeType":"209","messageId":"210","endLine":124,"endColumn":42},{"ruleId":"207","severity":1,"message":"249","line":208,"column":9,"nodeType":"209","messageId":"210","endLine":208,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":212,"column":9,"nodeType":"209","messageId":"210","endLine":212,"endColumn":24},{"ruleId":"207","severity":1,"message":"227","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":50,"column":9,"nodeType":"209","messageId":"210","endLine":50,"endColumn":24},{"ruleId":"207","severity":1,"message":"230","line":16,"column":8,"nodeType":"209","messageId":"210","endLine":16,"endColumn":20},{"ruleId":"207","severity":1,"message":"231","line":17,"column":8,"nodeType":"209","messageId":"210","endLine":17,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":18,"column":8,"nodeType":"209","messageId":"210","endLine":18,"endColumn":12},{"ruleId":"207","severity":1,"message":"233","line":19,"column":8,"nodeType":"209","messageId":"210","endLine":19,"endColumn":15},{"ruleId":"207","severity":1,"message":"251","line":122,"column":37,"nodeType":"209","messageId":"210","endLine":122,"endColumn":42},{"ruleId":"207","severity":1,"message":"252","line":143,"column":5,"nodeType":"209","messageId":"210","endLine":143,"endColumn":18},{"ruleId":"207","severity":1,"message":"249","line":202,"column":9,"nodeType":"209","messageId":"210","endLine":202,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":206,"column":9,"nodeType":"209","messageId":"210","endLine":206,"endColumn":24},{"ruleId":"207","severity":1,"message":"227","line":11,"column":8,"nodeType":"209","messageId":"210","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"228","line":50,"column":9,"nodeType":"209","messageId":"210","endLine":50,"endColumn":24},{"ruleId":"207","severity":1,"message":"230","line":17,"column":8,"nodeType":"209","messageId":"210","endLine":17,"endColumn":20},{"ruleId":"207","severity":1,"message":"231","line":18,"column":8,"nodeType":"209","messageId":"210","endLine":18,"endColumn":16},{"ruleId":"207","severity":1,"message":"232","line":19,"column":8,"nodeType":"209","messageId":"210","endLine":19,"endColumn":12},{"ruleId":"207","severity":1,"message":"233","line":20,"column":8,"nodeType":"209","messageId":"210","endLine":20,"endColumn":15},{"ruleId":"207","severity":1,"message":"251","line":123,"column":37,"nodeType":"209","messageId":"210","endLine":123,"endColumn":42},{"ruleId":"207","severity":1,"message":"249","line":209,"column":9,"nodeType":"209","messageId":"210","endLine":209,"endColumn":21},{"ruleId":"207","severity":1,"message":"228","line":213,"column":9,"nodeType":"209","messageId":"210","endLine":213,"endColumn":24},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'Box' is defined but never used.","'Link' is defined but never used.","'NotificationsIcon' is defined but never used.","'Badge' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["255"],"'ListSubheader' is defined but never used.","'DashboardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'Button' is defined but never used.","'DeleteIcon' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'count' is assigned a value but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'distancia_obra_paneles' is assigned a value but never used.","'req_respaldo_elec' is assigned a value but never used.","'req_monitoreo_remoto' is assigned a value but never used.","'exis_cobertura' is assigned a value but never used.","'tipo_bomba' is assigned a value but never used.","'created_at' is assigned a value but never used.","'altura_estatica' is assigned a value but never used.","'descenso_nivel' is assigned a value but never used.","'long_tuberia' is assigned a value but never used.","'diametro_tub' is assigned a value but never used.","'cant_accesorios' is assigned a value but never used.","'volumen_deposito' is assigned a value but never used.","'long_cable_motor' is assigned a value but never used.","'altura_succion' is assigned a value but never used.","'altura_impulsion' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'BombeoServices' is defined but never used.","'reset' is assigned a value but never used.","'long_cubierta' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},"Update the dependencies array to be: [history]",{"range":"258","text":"259"},[3545,3547],"[history]"]